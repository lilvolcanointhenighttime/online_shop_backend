version: '3'


services:
  db:
    image: postgres:15
    container_name: online_shop_postgres
    # restart: always
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    ports:
      - 5432:5432
    networks:
      - backend_network

  django:
    container_name: django
    build:
      context: .
    # restart: always
    ports:
      - '8000:8000'
    volumes:
      - .:/backend_apps
    depends_on:
      - db
      - redis
    environment:
      - DB_ENGINE=${DB_ENGINE}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    expose:
      - 8000
    network_mode: host

  nginx:
    container_name: nginx
    image: nginx
    depends_on:
      - django
    ports:
      - "8080:80"
    volumes:
      - .nginx/default.conf:/etc/nginx/conf.d
    networks:
      - backend_network

  redis:
    container_name: redis
    image: redis:alpine
    hostname: redis
    ports:
      - '6379:6379'
    # restart: always
    networks:
      - backend_network

  worker:
    container_name: celery_worker
    # restart: always
    build:
      context: .
    entrypoint: celery
    command: -A config.settings.celery worker -l info
    volumes:
      - .:/online_shop_backend/src/store_management/apps
    links:
      - redis
    depends_on:
      - db
      - django
      - redis
    networks:
      - backend_network

volumes:
  postgres_data:

networks:
  backend_network:
    driver: bridge
